// Code generated by "gocqlx/cmd/schemagen"; DO NOT EDIT.

package models

import "github.com/scylladb/gocqlx/v2/table"

// Table models.
var (
	Applications = table.New(table.Metadata{
		Name: "applications",
		Columns: []string{
			"app_id",
			"domain_id",
			"last_deployed",
			"name",
			"owner_id",
		},
		PartKey: []string{
			"owner_id",
		},
		SortKey: []string{
			"app_id",
		},
	})

	ApplicationsByNameIndex = table.New(table.Metadata{
		Name: "applications_by_name_index",
		Columns: []string{
			"app_id",
			"idx_token",
			"name",
			"owner_id",
		},
		PartKey: []string{
			"name",
		},
		SortKey: []string{
			"idx_token",
			"owner_id",
			"app_id",
		},
	})

	ApplicationsByUser = table.New(table.Metadata{
		Name: "applications_by_user",
		Columns: []string{
			"app_id",
			"domain_id",
			"last_deployed",
			"name",
			"owner_id",
		},
		PartKey: []string{
			"owner_id",
		},
		SortKey: []string{
			"last_deployed",
			"app_id",
		},
	})

	DeploymentConfigs = table.New(table.Metadata{
		Name: "deployment_configs",
		Columns: []string{
			"deploy_id",
			"headers",
			"redirects",
			"rewrites",
			"routing",
			"ssl",
		},
		PartKey: []string{
			"deploy_id",
		},
		SortKey: []string{},
	})

	Deployments = table.New(table.Metadata{
		Name: "deployments",
		Columns: []string{
			"app_id",
			"cid",
			"context",
			"deploy_id",
			"sid",
		},
		PartKey: []string{
			"app_id",
		},
		SortKey: []string{
			"deploy_id",
		},
	})

	Dlt = table.New(table.Metadata{
		Name: "dlt",
		Columns: []string{
			"app_id",
			"base_url",
			"deploy_id",
		},
		PartKey: []string{
			"base_url",
		},
		SortKey: []string{},
	})

	Domains = table.New(table.Metadata{
		Name: "domains",
		Columns: []string{
			"domain",
			"domain_id",
			"permissions",
			"user_id",
		},
		PartKey: []string{
			"domain_id",
		},
		SortKey: []string{
			"user_id",
		},
	})

	DomainsByDomainIndex = table.New(table.Metadata{
		Name: "domains_by_domain_index",
		Columns: []string{
			"domain",
			"domain_id",
			"idx_token",
			"user_id",
		},
		PartKey: []string{
			"domain",
		},
		SortKey: []string{
			"idx_token",
			"domain_id",
			"user_id",
		},
	})

	DomainsByOwnerIdIndex = table.New(table.Metadata{
		Name: "domains_by_owner_id_index",
		Columns: []string{
			"domain_id",
			"idx_token",
			"user_id",
		},
		PartKey: []string{
			"user_id",
		},
		SortKey: []string{
			"idx_token",
			"domain_id",
		},
	})

	Keys = table.New(table.Metadata{
		Name: "keys",
		Columns: []string{
			"key",
			"last_use",
			"last_use_data",
			"name",
			"owner_id",
			"permissions",
			"state",
		},
		PartKey: []string{
			"key",
		},
		SortKey: []string{},
	})

	KeysByOwnerIndex = table.New(table.Metadata{
		Name: "keys_by_owner_index",
		Columns: []string{
			"idx_token",
			"key",
			"owner_id",
		},
		PartKey: []string{
			"owner_id",
		},
		SortKey: []string{
			"idx_token",
			"key",
		},
	})

	Migrations = table.New(table.Metadata{
		Name: "migrations",
		Columns: []string{
			"current_version",
			"instance_id",
		},
		PartKey: []string{
			"instance_id",
		},
		SortKey: []string{},
	})

	Owners = table.New(table.Metadata{
		Name: "owners",
		Columns: []string{
			"address",
			"admin",
			"user_id",
		},
		PartKey: []string{
			"user_id",
		},
		SortKey: []string{},
	})

	OwnersByAddressIndex = table.New(table.Metadata{
		Name: "owners_by_address_index",
		Columns: []string{
			"address",
			"idx_token",
			"user_id",
		},
		PartKey: []string{
			"address",
		},
		SortKey: []string{
			"idx_token",
			"user_id",
		},
	})

	Sites = table.New(table.Metadata{
		Name: "sites",
		Columns: []string{
			"cid",
			"host",
			"owner",
			"site_id",
		},
		PartKey: []string{
			"site_id",
		},
		SortKey: []string{},
	})

	SitesByHostIndex = table.New(table.Metadata{
		Name: "sites_by_host_index",
		Columns: []string{
			"host",
			"idx_token",
			"site_id",
		},
		PartKey: []string{
			"host",
		},
		SortKey: []string{
			"idx_token",
			"site_id",
		},
	})

	SitesByOwnerIndex = table.New(table.Metadata{
		Name: "sites_by_owner_index",
		Columns: []string{
			"idx_token",
			"owner",
			"site_id",
		},
		PartKey: []string{
			"owner",
		},
		SortKey: []string{
			"idx_token",
			"site_id",
		},
	})
)
